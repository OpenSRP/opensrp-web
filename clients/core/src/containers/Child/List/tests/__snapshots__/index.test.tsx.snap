// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/child/List renders correctly 1`] = `
<ChildList
  childArray={Array []}
  fetchChild={[MockFunction]}
  opensrpService={
    [MockFunction] {
      "calls": Array [
        Array [
          "undefined",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": Object {
            "list": [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "clientType": "child",
                    "gender": "",
                    "pageNumber": "1",
                    "pageSize": undefined,
                    "searchText": "",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
          },
        },
      ],
    }
  }
  removeChild={[MockFunction]}
  setTotalRecords={[MockFunction]}
  totalRecords={0}
>
  <Ripple
    borderColor="#ff5d00"
    borderStyle="solid"
    borderWidth="4px"
    height="64px"
    minHeight="80vh"
    width="64px"
  >
    <div
      className="lds-ripple-parent"
      style={
        Object {
          "minHeight": "80vh",
        }
      }
    >
      <div
        className="lds-ripple"
        style={
          Object {
            "height": "64px",
            "width": "64px",
          }
        }
      >
        <div
          style={
            Object {
              "borderColor": "#ff5d00",
              "borderStyle": "solid",
              "borderWidth": "4px",
            }
          }
        />
        <div
          style={
            Object {
              "borderColor": "#ff5d00",
              "borderStyle": "solid",
              "borderWidth": "4px",
            }
          }
        />
      </div>
    </div>
  </Ripple>
</ChildList>
`;

exports[`containers/child/List renders correctly when childArray is an empty array: Ripple Loader 1`] = `
<Ripple
  borderColor="#ff5d00"
  borderStyle="solid"
  borderWidth="4px"
  height="64px"
  minHeight="80vh"
  width="64px"
>
  <div
    className="lds-ripple-parent"
    style={
      Object {
        "minHeight": "80vh",
      }
    }
  >
    <div
      className="lds-ripple"
      style={
        Object {
          "height": "64px",
          "width": "64px",
        }
      }
    >
      <div
        style={
          Object {
            "borderColor": "#ff5d00",
            "borderStyle": "solid",
            "borderWidth": "4px",
          }
        }
      />
      <div
        style={
          Object {
            "borderColor": "#ff5d00",
            "borderStyle": "solid",
            "borderWidth": "4px",
          }
        }
      />
    </div>
  </div>
</Ripple>
`;

exports[`containers/child/List works correctly with the redux store 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(ChildList)
    childArray={Array []}
    fetchChild={[MockFunction]}
    opensrpService={
      [MockFunction] {
        "calls": Array [
          Array [
            "undefined",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Object {
              "list": [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "clientType": "child",
                      "gender": "",
                      "pageNumber": "1",
                      "pageSize": undefined,
                      "searchText": "",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
            },
          },
        ],
      }
    }
    removeChild={[MockFunction]}
    setTotalRecords={[MockFunction]}
    totalRecords={0}
  >
    <ChildList
      childArray={
        Array [
          Object {
            "_id": "922db682a-0f31-4935-9114-c4d33d148617",
            "_rev": "v1",
            "addresses": Array [],
            "attributes": Object {
              "dynamicProperties": Object {
                "age_year_part": 2,
                "last_contact_date": "2020-01-01T00:02:01",
              },
              "residence": "6f7ca772-b368-4c3d-bd9c-011ra698203a",
            },
            "baseEntityId": "906fc91h-4cce-412a-8327-ca2315ekoeo9",
            "birthdate": 358110000088,
            "birthdateApprox": false,
            "clientApplicationVersion": 2,
            "clientDatabaseVersion": 2,
            "dateCreated": 1751437728487,
            "deathdateApprox": false,
            "firstName": "zysan",
            "identifiers": Object {
              "opensrp_id": "3117124",
            },
            "lastName": "DADA",
            "middleName": "",
            "relationships": Object {
              "family_head": Array [
                "gjio081-c153-4bcc-85c3-0b7c3d9f2263",
              ],
              "primary_caregiver": Array [
                "jklf5181-c153-4bcc-85c3-0b7c3d9f2263",
              ],
            },
            "serverVersion": 1557937728441,
            "type": "Client",
          },
          Object {
            "_id": "922db682a-0f31-4935-9114-c4d33d148617",
            "_rev": "v1",
            "addresses": Array [],
            "attributes": Object {
              "dynamicProperties": Object {
                "age_year_part": 2,
                "last_contact_date": "2020-01-01T00:02:01",
              },
              "residence": "1f7ca772-b368-4c3d-bd9c-011ra698203a",
            },
            "baseEntityId": "406fc91h-4cce-412a-8327-ca2315ekoeo9",
            "birthdate": 458110000088,
            "birthdateApprox": true,
            "clientApplicationVersion": 21,
            "clientDatabaseVersion": 1,
            "dateCreated": 1851437728487,
            "deathdateApprox": true,
            "firstName": "zysan",
            "identifiers": Object {
              "opensrp_id": "3117124",
            },
            "lastName": "DADA",
            "middleName": "",
            "relationships": Object {
              "family_head": Array [
                "gjio081-c153-4bcc-85c3-0b7c3d9f2263",
              ],
              "primary_caregiver": Array [
                "jklf5172-c153-4bcc-85c3-0b7c3d9f2263",
              ],
            },
            "serverVersion": 1257937728441,
            "type": "Client",
          },
          Object {
            "_id": "912db682a-0f31-4935-9114-c4d33d148617",
            "_rev": "v1",
            "addresses": Array [],
            "attributes": Object {
              "dynamicProperties": Object {
                "age_year_part": 2,
                "last_contact_date": "2020-01-01T00:02:01",
              },
              "residence": "9f7ca772-b368-4d39-bd9c-011ra698203a",
            },
            "baseEntityId": "306fc91h-4cce-41qa-9327-ca2315ekoeo9",
            "birthdate": 3581101103188,
            "birthdateApprox": false,
            "clientApplicationVersion": 2,
            "clientDatabaseVersion": 2,
            "dateCreated": 1751437728487,
            "deathdateApprox": true,
            "firstName": "tanvir",
            "identifiers": Object {
              "opensrp_id": "3117124",
            },
            "lastName": "DADA",
            "middleName": "",
            "relationships": Object {
              "family_head": Array [
                "gjio081-c153-4bcc-85c3-0b7c3d9f2263",
              ],
              "primary_caregiver": Array [
                "jklf5181-c153-4bcc-85c3-0b7c3d9f2263",
              ],
            },
            "serverVersion": 1557937728441,
            "type": "Client",
          },
        ]
      }
      fetchChild={[Function]}
      opensrpService={
        [MockFunction] {
          "calls": Array [
            Array [
              "undefined",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Object {
                "list": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "clientType": "child",
                        "gender": "",
                        "pageNumber": "1",
                        "pageSize": undefined,
                        "searchText": "",
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
              },
            },
          ],
        }
      }
      removeChild={[Function]}
      setTotalRecords={[Function]}
      totalRecords={0}
    >
      <Ripple
        borderColor="#ff5d00"
        borderStyle="solid"
        borderWidth="4px"
        height="64px"
        minHeight="80vh"
        width="64px"
      >
        <div
          className="lds-ripple-parent"
          style={
            Object {
              "minHeight": "80vh",
            }
          }
        >
          <div
            className="lds-ripple"
            style={
              Object {
                "height": "64px",
                "width": "64px",
              }
            }
          >
            <div
              style={
                Object {
                  "borderColor": "#ff5d00",
                  "borderStyle": "solid",
                  "borderWidth": "4px",
                }
              }
            />
            <div
              style={
                Object {
                  "borderColor": "#ff5d00",
                  "borderStyle": "solid",
                  "borderWidth": "4px",
                }
              }
            />
          </div>
        </div>
      </Ripple>
    </ChildList>
  </Connect(ChildList)>
  );
</Provider>
`;
